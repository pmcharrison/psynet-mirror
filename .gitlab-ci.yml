workflow:
  rules:
    - if: $CI_COMMIT_TAG
      variables:
        DOCKER_TAG: $CI_COMMIT_TAG
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      variables:
        DOCKER_TAG: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME

image: docker:20.10.16

services:
  - docker:20.10.16-dind
  - postgres:12.2-alpine
  - redis:latest

variables:
  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
  AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
  POSTGRES_DB: dallinger
  POSTGRES_USER: dallinger
  POSTGRES_PASSWORD: ""
  POSTGRES_HOST_AUTH_METHOD: trust
  DATABASE_URL: postgresql://dallinger@postgres:5432/dallinger
  REDIS_URL: redis://redis:6379
  HEADLESS: "TRUE"
  DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$DOCKER_TAG
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"

before_script:
  - export POSTGRES_IP=$(getent hosts postgres  | awk '{ print $1 }')
  - export REDIS_IP=$(getent hosts redis  | awk '{ print $1 }')
  - echo $POSTGRES_IP
  - echo $REDIS_IP
  - echo $DOCKER_TAG
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - docker pull $DOCKER_IMAGE || true
  - docker build --cache-from $DOCKER_IMAGE --tag $DOCKER_IMAGE .

tests:
  parallel: 10
  stage: main
  script:
    - docker run
      --add-host=postgres:$POSTGRES_IP
      --add-host=redis:$REDIS_IP
      -e HEADLESS=TRUE -e REDIS_URL -e DATABASE_URL -e POSTGRES_DB -e POSTGRES_USER -e POSTGRES_PASSWORD
      -e AWS_ACCESS_KEY_ID -e AWS_DEFAULT_REGION -e AWS_SECRET_ACCESS_KEY
      $DOCKER_IMAGE bash -c
      "pytest --test-group-count $CI_NODE_TOTAL --test-group=$CI_NODE_INDEX
      --test-group-random-seed=12345 --ignore=tests/local_only --ignore=tests/isolated --chrome tests"

deploy_docker:
  stage: main
  script:
    - docker push $DOCKER_IMAGE

deploy_docs:
  image: $DOCKER_IMAGE
  stage: main
  needs: [deploy_docker]
  script:
    - pip install -U sphinx
    - pip install sphinx_rtd_theme
    - pip install sphinx-autodoc-typehints
    - sphinx-build -b html docs public
  artifacts:
    paths:
    - public
    - public/low_level
  only:
  - master
