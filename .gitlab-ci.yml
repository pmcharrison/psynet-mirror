# The following workflow runs:
# - Branch pipelines when a merge request is not open for the branch.
# - Merge request pipelines when a merge request is open for the branch.
# See https://docs.gitlab.com/ee/ci/yaml/workflow.html for more details.
workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH

services:
  - postgres:12.2-alpine
  - redis:latest

variables:
  POSTGRES_DB: dallinger
  POSTGRES_USER: dallinger
  POSTGRES_PASSWORD: ""
  POSTGRES_HOST_AUTH_METHOD: trust
  DATABASE_URL: postgresql://dallinger@postgres:5432/dallinger

# The build_dependencies image includes all of PsyNet's dependencies but not PsyNet itself.
# This image should only be rebuilt when PsyNet's dependencies change.
# We can then use that image for running our PsyNet tests.
build_dependencies:
  image: docker:20.10.16
  stage: build
  rules:
    - changes:
        - Dockerfile
        - setup.py
  services:
    - docker:20.10.16-dind
  variables:
    # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:dependencies_$CI_COMMIT_BRANCH --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:dependencies_$CI_COMMIT_BRANCH .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:dependencies_$CI_COMMIT_BRANCH

tests:
  image: $CI_REGISTRY_IMAGE:dependencies_$CI_COMMIT_BRANCH
  parallel: 5
  stage: test
  before_script:
    - pip install -e .
  script:
    - pytest --test-group-count $CI_NODE_TOTAL --test-group=$CI_NODE_INDEX --test-group-random-seed=12345 --ignore=tests/local_only tests --chrome tests

tests_isolated:
  image: $CI_REGISTRY_IMAGE:dependencies_$CI_COMMIT_BRANCH
  stage: test
  before_script:
    - pip install -e .
  script:
    - pytest --chrome tests/isolated/test_demo_gibbs.py

pages:
  image: $CI_REGISTRY_IMAGE:dependencies_$CI_COMMIT_BRANCH
  stage: deploy
  before_script:
    - pip install -e .
  script:
    - pip install -U sphinx
    - pip install sphinx_rtd_theme
    - pip install sphinx-autodoc-typehints
    - sphinx-build -b html docs public
  artifacts:
    paths:
    - public
    - public/low_level
  only:
  - master
