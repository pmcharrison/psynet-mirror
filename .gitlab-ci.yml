image: docker:20.10.16

services:
  - docker:20.10.16-dind
  - postgres:12.2-alpine
  - redis:latest

variables:
  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
  AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
  POSTGRES_DB: dallinger
  POSTGRES_USER: dallinger
  POSTGRES_PASSWORD: ""
  POSTGRES_HOST_AUTH_METHOD: trust
  DATABASE_URL: postgresql://dallinger@postgres:5432/dallinger
  REDIS_URL: redis://redis:6379
  HEADLESS: "TRUE"
  DOCKER_REGISTRY_BASE: registry.gitlab.com/psynetdev/psynet
  DOCKER_IMAGE_CACHE_FROM: $DOCKER_REGISTRY_BASE:master
  DOCKER_TAG: psynet-build
  DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$DOCKER_TAG
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

before_script:
  - export POSTGRES_IP=$(getent hosts postgres  | awk '{ print $1 }')
  - export REDIS_IP=$(getent hosts redis  | awk '{ print $1 }')
  - echo $POSTGRES_IP
  - echo $REDIS_IP
  - docker image prune --all --force
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - docker pull $DOCKER_IMAGE_CACHE_FROM || true
  - docker build --cache-from $DOCKER_IMAGE_CACHE_FROM --tag $DOCKER_IMAGE .

#tests:
#  parallel: 10
#  stage: test
#  script:
#    - docker run
#      --add-host=postgres:$POSTGRES_IP
#      --add-host=redis:$REDIS_IP
#      -e HEADLESS=TRUE -e REDIS_URL -e DATABASE_URL -e POSTGRES_DB -e POSTGRES_USER -e POSTGRES_PASSWORD
#      -e AWS_ACCESS_KEY_ID -e AWS_DEFAULT_REGION -e AWS_SECRET_ACCESS_KEY
#      $DOCKER_IMAGE bash -c
#      "pytest --test-group-count $CI_NODE_TOTAL --test-group=$CI_NODE_INDEX
#      --test-group-random-seed=12345 --ignore=tests/local_only --ignore=tests/isolated --chrome tests"

deploy_docker:
  stage: deploy
  script:
    - if [ -z "$CI_COMMIT_TAG" ]; then docker tag $DOCKER_IMAGE $DOCKER_REGISTRY_BASE:$CI_COMMIT_TAG && docker push $DOCKER_REGISTRY_BASE:$CI_COMMIT_TAG; fi
    - if [ "$CI_COMMIT_REF_NAME" == "master"]; then docker tag $DOCKER_IMAGE $DOCKER_REGISTRY_BASE:master && docker push $DOCKER_REGISTRY_BASE:master; fi
  rules:
    - if: $CI_COMMIT_TAG
#  only:
#    - tags
#    - master

#  rules:
#    - if: '$CI_COMMIT_TAG'
#    - if: $CI_COMMIT_REF_NAME == "master"

pages:
  image: $DOCKER_IMAGE
  stage: deploy
  needs: [deploy_docker]
  script:
    - pip install -U sphinx
    - pip install furo
    - pip install polib
    - pip install sphinx-autodoc-typehints
    - sphinx-build -b html docs public
  artifacts:
    paths:
    - public
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
